<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <sec:debug />

    <sec:http entry-point-ref="federationEntryPoint" use-expressions="true">
        <sec:intercept-url pattern="/" access="permitAll"/>
        <sec:intercept-url pattern="/fediz" access="permitAll"/>
        <sec:intercept-url pattern="/index.jsp" access="permitAll"/>
<!--
        <intercept-url pattern="/index.jsp" access="permitAll"/>
        <intercept-url pattern="/cas-logout.jsp" access="permitAll"/>
        <intercept-url pattern="/casfailed.jsp" access="permitAll"/>
-->
        <sec:intercept-url pattern="/secure/fedservlet" access="isAuthenticated()"/>
        <sec:intercept-url pattern="/secure/manager/**" access="ROLE_MANAGER"/>
        <sec:intercept-url pattern="/secure/admin/**" access="ROLE_ADMIN"/>
<!-- Constructor threw exception; nested exception is java.lang.IllegalArgumentException: Failed to parse expression 'ROLE_USER ROLE_ADMIN ROLE_MANAGER' -->
<!--        <sec:intercept-url pattern="/secure/user/**" access="ROLE_USER ROLE_ADMIN ROLE_MANAGER"/>-->
<!--        <sec:intercept-url pattern="/secure/fedservlet" access="ROLE_USER,ROLE_ADMIN,ROLE_MANAGER,ROLE_AUTHENTICATED"/>-->
<!--
        <custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"/>
        <custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/>
        <custom-filter ref="casFilter" position="CAS_FILTER" />
        <logout logout-success-url="/cas-logout.jsp"/>
-->


        <sec:custom-filter ref="federationFilter" after="BASIC_AUTH_FILTER" />
        <sec:session-management session-authentication-strategy-ref="sas"/>

    </sec:http>


    <sec:authentication-manager alias="authManager">
        <sec:authentication-provider ref="federationAuthProvider" />
    </sec:authentication-manager>
<!--
    <bean id="serviceProperties"
        class="org.apache.cxf.fediz.spring.ServiceProperties"
        p:fedizConfig="fediz_config.xml"/>
-->
    <bean id="fedizConfig" class="org.apache.cxf.fediz.spring.web.authentication.FederationConfigImpl" init-method="init"
        p:configFile="WEB-INF/fediz_config.xml" />

    <bean id="federationEntryPoint"
        class="org.apache.cxf.fediz.spring.web.authentication.FederationAuthenticationEntryPoint"
        p:federationConfig-ref="fedizConfig" />

    <bean id="federationFilter"
        class="org.apache.cxf.fediz.spring.web.authentication.FederationAuthenticationFilter"
        p:authenticationManager-ref="authManager" p:sessionAuthenticationStrategy-ref="sas">
<!--
        <property name="authenticationDetailsSource">
            <bean class="org.springframework.security.cas.web.authentication.ServiceAuthenticationDetailsSource"/>
        </property>
-->
        <property name="authenticationFailureHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
                p:defaultFailureUrl="/casfailed.jsp"/>
        </property>
    </bean>
<!--
    <b:bean id="pgtStorage" class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl"/>
-->
    <bean id="federationAuthProvider" class="org.apache.cxf.fediz.spring.web.authentication.FederationAuthenticationProvider"
        p:federationConfig-ref="fedizConfig">
        <property name="authenticationUserDetailsService">
            <bean class="org.apache.cxf.fediz.spring.web.authentication.GrantedAuthoritiesUserDetailsFederationService"/>
<!--
            <bean
                class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <constructor-arg ref="userService" />
            </bean>
-->
        </property>
<!--
        <property name="ticketValidator">
            <bean
                class="org.jasig.cas.client.validation.Cas20ProxyTicketValidator"
                p:acceptAnyProxy="true"
                p:proxyCallbackUrl="https://${cas.service.host}/cas-sample/j_spring_cas_security_proxyreceptor"
                p:proxyGrantingTicketStorage-ref="pgtStorage">
                <b:constructor-arg value="https://${cas.server.host}/cas" />
            </bean>
        </property>
        <property name="statelessTicketCache">
            <bean class="org.springframework.security.cas.authentication.EhCacheBasedTicketCache">
                <property name="cache">
                    <bean class="net.sf.ehcache.Cache"
                      init-method="initialise"
                      destroy-method="dispose">
                        <constructor-arg value="casTickets"/>
                        <constructor-arg value="50"/>
                        <constructor-arg value="true"/>
                        <constructor-arg value="false"/>
                        <constructor-arg value="3600"/>
                        <constructor-arg value="900"/>
                    </bean>
                </property>
            </bean>
        </property>
-->
    </bean>

    <bean id="sas" class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy" />

    <!-- Configuration for the environment can be overriden by system properties -->
<!--
    <context:property-placeholder system-properties-mode="OVERRIDE" properties-ref="environment"/>
    <util:properties id="environment">
        <b:prop key="cas.service.host">localhost:8443</b:prop>
        <b:prop key="cas.server.host">localhost:9443</b:prop>
    </util:properties>
-->
</beans>

